/*! marcelaviola.com.ar 2016-04-10 */

(function(a, b) {
    var c = window, d = document;
    var e = "https://api.instagram.com/v1/users/self/media/recent/?";
    var f = {
        "data-show-tags": {
            attributeName: "showTags",
            defaultValue: false
        },
        "data-show-tags-count": {
            attributeName: "showTagsCount",
            defaultValue: 1
        },
        "data-show-likes": {
            attributeName: "showLikes",
            defaultValue: false
        },
        "data-render-type": {
            attributeName: "renderType",
            defaultValue: "thumbnail"
        },
        "data-count": {
            attributeName: "count",
            defaultValue: 5
        }
    };
    var g = {
        tag: '<span class="instagrama-tag">{{tag}}</span>',
        loader: '<div class="spinner"><div class="dot1"></div><div class="dot2"></div></div>'
    };
    var h = {
        _: function(a) {
            var b = {};
            for (var c = 0; c < a.length; c += 1) {
                b[a[c]] = d.createElement(a[c]);
            }
            return b;
        }([ "div", "figure", "figcaption", "img", "a" ]),
        "new": function(a) {
            return h._[a].cloneNode(false);
        }
    };
    function i(a) {
        return typeof a === "boolean" || typeof a === "object" && typeof a.valueOf() === "boolean";
    }
    var j = 0, k = 0;
    function l(a, b) {
        var c = [];
        for (var d in a) {
            if (a.hasOwnProperty(d)) {
                var e = b ? b + "[" + d + "]" : d, f = a[d];
                c.push(typeof f == "object" ? l(f, e) : encodeURIComponent(e) + "=" + encodeURIComponent(f));
            }
        }
        return c.join("&");
    }
    function m(a) {
        var b = document.createElement("script"), c = 0;
        b.src = a;
        b.async = true;
        b.onload = b.onreadystatechange = function() {
            if (!c && (!this.readyState || this.readyState === "loaded" || this.readyState === "complete")) {
                c = true;
                b.onload = b.onreadystatechange = null;
                if (b && b.parentNode) {
                    b.parentNode.removeChild(b);
                }
            }
        };
        document.getElementsByTagName("head")[0].appendChild(b);
    }
    function n(a, b, c) {
        var d = "";
        if (typeof b === "function" && typeof c === "undefined") {
            c = b;
        } else {
            d = l(b);
        }
        j += 1;
        var e = "phealer" + "_" + new Date().valueOf() + j;
        window[e] = function(a) {
            c && c(a);
            try {
                delete window[e];
            } catch (b) {}
            window[e] = null;
        };
        m(a + d + "&amp;callback=" + e);
    }
    var o = function(a) {
        var b = this;
        var c = a.getAttribute("data-access-token");
        if (c === undefined || c === null) {
            throw "Instagramas missing access token: Instagramas needs access token to fetch information from instragram.";
        } else {
            a.removeAttribute("data-access-token");
        }
        b.element = a;
        b.children = [];
        b.childrenLoaded = 1;
        for (var d in f) {
            b[f[d].attributeName] = i(f[d].defaultValue) ? a.getAttribute(d) === "true" || f[d].defaultValue : a.getAttribute(d) || f[d].defaultValue;
        }
        var j = e + "count=" + b.count + "&amp;" + "access_token=" + c;
        b.loader = h.new("div");
        b.loader.className = "loader";
        b.loader.innerHTML = g.loader;
        b.element.appendChild(b.loader);
        b.element.setAttribute("data-state", "initiated");
        b.get(j, b.create);
    };
    o.prototype.childLoaded = function() {
        var a = this;
        if (a.children.length === a.childrenLoaded) {
            a.childrenLoaded = null;
            delete a.childrenLoaded;
            return a.ready();
        }
        a.childrenLoaded += 1;
        return a;
    };
    o.prototype.ready = function() {
        var a = this;
        a.element.setAttribute("data-state", "ready");
        a.element.removeChild(a.loader);
        return a;
    };
    o.prototype.get = function(a, b) {
        var c = this;
        c.element.setAttribute("data-state", "get:in-progress");
        function d(a) {
            c.element.setAttribute("data-state", "get:success");
            b.call(c, a);
        }
        n(a, d);
        return c;
    };
    o.prototype.create = function(a) {
        var b = this;
        var c;
        if (!a.data) {
            return;
        }
        for (c = 0; c < a.data.length; c += 1) {
            b.children.push(new p(a.data[c], b));
        }
        b.element.setAttribute("data-state", "created");
        return b;
    };
    var p = function(a, b) {
        if (!a) {
            return this;
        }
        var c = this;
        c.parent = b;
        c.data = a;
        c.render();
        return c;
    };
    p.prototype.render = function() {
        var a = this, b, c, d, e, f, i, j, k = "", l = 0;
        b = h.new("figure");
        b.className = "instagrama-" + a.data.type;
        e = h.new("a");
        e.target = "_blank";
        e.className = "instagrama";
        e.href = a.data.link;
        b.appendChild(e);
        j = h.new("img");
        j.alt = a.data.caption.text;
        j.src = a.data.images[a.parent.renderType].url;
        j.onload = function() {
            a.parent.childLoaded.apply(a.parent, arguments);
        };
        e.appendChild(j);
        if (a.parent.showLikes) {
            d = h.new("figcaption");
            d.className = "instagrama-likes";
            d.innerHTML = a.data.likes.count;
            e.appendChild(d);
        }
        if (a.parent.showTags) {
            i = a.parent.showTagsCount || a.data.tags.length;
            for (f = 0; f < i; f += 1) {
                if (!a.data.tags[f]) {
                    continue;
                }
                k += g.tag.replace("{{tag}}", a.data.tags[f]);
            }
            c = h.new("figcaption");
            c.className = "instagrama-tags";
            c.innerHTML = k;
            e.appendChild(c);
        }
        a.parent.element.appendChild(b);
        return a;
    };
    function q() {
        console.log("ready");
        var a = [], b, c = document, d = c.documentElement.doScroll, e = "DOMContentLoaded", f = (d ? /^loaded|^c/ : /^loaded|^i|^c/).test(c.readyState);
        if (!f) {
            c.addEventListener(e, b = function() {
                c.removeEventListener(e, b);
                f = 1;
                while (b = a.shift()) b();
            });
        }
        return function(b) {
            console.log("ready adding");
            f ? setTimeout(b, 0) : a.push(b);
        };
    }
    var r = d.querySelectorAll(".instagramas");
    if (r !== undefined || r !== null) {
        var s = c._instagramas_namespace || "_Instagramas";
        c._instagramas_namespace = s;
        c[s] = {
            collection: []
        };
        q(function t() {
            console.log("start");
            for (var a = 0; a < r.length; a += 1) {
                c[s].collection.push(new o(r[a]));
            }
        });
    }
    b["true"] = a;
})({}, function() {
    return this;
}());

!function(a) {
    "use strict";
    function b() {}
    b.prototype.on = function(a, b) {
        return this._collection = this._collection || {}, this._collection[a] = this._collection[a] || [], 
        this._collection[a].push(b), this;
    }, b.prototype.once = function(a, b) {
        function c() {
            d.off(a, c), b.apply(this, arguments);
        }
        var d = this;
        return c.listener = b, this.on(a, c), this;
    }, b.prototype.off = function(a, b) {
        var c = this._collection[a], d = 0;
        if (void 0 !== c) for (d; d < c.length; d += 1) if (c[d] === b || c[d].listener === b) {
            c.splice(d, 1);
            break;
        }
        return 0 === c.length && this.removeAllListeners(a), this;
    }, b.prototype.removeAllListeners = function(a) {
        return this._collection = this._collection || {}, delete this._collection[a], this;
    }, b.prototype.listeners = function(a) {
        return this._collection = this._collection || {}, this._collection[a];
    }, b.prototype.emit = function() {
        if (void 0 === this._collection) return this;
        var a, b = [].slice.call(arguments, 0), c = b.shift(), d = this._collection[c], e = 0;
        if (d) for (d = d.slice(0), a = d.length, e; a > e; e += 1) d[e].apply(this, b);
        return this;
    }, "function" == typeof a.define && void 0 !== a.define.amd ? a.define("Jvent", [], function() {
        return b;
    }) : "undefined" != typeof module && void 0 !== module.exports ? module.exports = b : a.Jvent = b;
}(this);

(function(window) {
    "use strict";
    var win = window, doc = win.document, docEl = doc.documentElement, Jvent = win.Jvent, on = win.addEventListener || win.attachEvent, RESIZE = on === win.attachEvent ? "onresize" : "resize", SCROLL = on === win.attachEvent ? "onscroll" : "scroll", resized = false, scrolled = false, requestAnimFrame = function() {
        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {
            window.setTimeout(callback, 1e3 / 60);
        };
    }();
    function update() {
        if (!resized && !scrolled) {
            return;
        }
        var eve = resized ? "resize" : "scroll";
        this.refresh();
        resized = false;
        scrolled = false;
        this.emit(eve);
    }
    on(RESIZE, function() {
        resized = true;
    });
    on(SCROLL, function() {
        scrolled = true;
    });
    function Viewport() {
        if (!(this instanceof Viewport) && Viewport.getInstance === undefined) {
            return new Viewport();
        }
        if (Viewport.getInstance) {
            return Viewport.getInstance;
        }
        this.init();
        return this;
    }
    Viewport.prototype = new Jvent();
    Viewport.prototype.init = function() {
        var that = this;
        that.refresh();
        that.calculateDeviceDimensions();
        (function updateloop() {
            requestAnimFrame(updateloop);
            update.call(that);
        })();
        Viewport.getInstance = this;
        return this;
    };
    Viewport.prototype.device = {};
    Viewport.prototype.calculateDimensions = function() {
        this.height = docEl.clientHeight;
        this.width = docEl.clientWidth;
        return this;
    };
    Viewport.prototype.calculateDeviceDimensions = function() {
        this.device.height = win.screen.height;
        this.device.width = win.screen.width;
        return this;
    };
    Viewport.prototype.calculateScroll = function() {
        var cachedTop = this.scrollY, cachedBottom = this.height + cachedTop, bottom;
        this.scrollY = win.pageYOffset || docEl.scrollTop;
        this.scrollX = win.pageXOffset || docEl.scrollLeft;
        bottom = this.height + this.scrollY;
        if (cachedTop !== this.scrollY && this.scrollY === 0) {
            this.emit("top");
        } else if (cachedBottom !== bottom && bottom >= doc.body.scrollHeight) {
            this.emit("bottom");
        }
        return this;
    };
    Viewport.prototype.calculateOffset = function() {
        this.top = this.scrollY;
        this.right = this.scrollX + this.width;
        this.bottom = this.scrollY + this.height;
        this.left = this.scrollX;
        return this;
    };
    Viewport.prototype.calculateMousePostition = function(eve) {
        var coordX = 0, coordY = 0;
        eve = eve || window.event;
        if (eve.pageX || eve.pageY) {
            coordX = eve.pageX;
            coordY = eve.pageY;
        } else {
            coordX = eve.clientX + doc.body.scrollLeft + docEl.scrollLeft;
            coordY = eve.clientY + doc.body.scrollTop + docEl.scrollTop;
        }
        return {
            posX: coordX,
            posY: coordY
        };
    };
    Viewport.prototype.calculateOrientation = function() {
        this.orientation = Math.abs(win.orientation) === 90 ? "landscape" : "portrait";
        return this;
    };
    Viewport.prototype.inViewport = function(el) {
        var r = el.getBoundingClientRect();
        return r.top >= 0 && r.right <= this.width && r.bottom <= this.height && r.left >= 0;
    };
    Viewport.prototype.isVisible = function(el) {
        var r = el.getBoundingClientRect();
        return r.bottom >= 0 && r.top <= this.height;
    };
    Viewport.prototype.refresh = function() {
        this.calculateDimensions();
        this.calculateScroll();
        this.calculateOffset();
        this.calculateOrientation();
        return this;
    };
    if (typeof window.define === "function" && window.define.amd !== undefined) {
        window.define("viewport", [], function() {
            return new Viewport();
        });
    } else if (typeof module !== "undefined" && module.exports !== undefined) {
        module.exports = new Viewport();
    } else {
        window.viewport = new Viewport();
    }
})(this);

!function(e, t) {
    "function" == typeof define && define.amd ? define([], t(e)) : "object" == typeof exports ? module.exports = t(e) : e.smoothScroll = t(e);
}("undefined" != typeof global ? global : this.window || this.global, function(e) {
    "use strict";
    var t, n, r, o, a, c = {}, u = "querySelector" in document && "addEventListener" in e, i = {
        selector: "[data-scroll]",
        selectorHeader: "[data-scroll-header]",
        speed: 500,
        easing: "easeInOutCubic",
        offset: 0,
        updateURL: !0,
        callback: function() {}
    }, l = function() {
        var e = {}, t = !1, n = 0, r = arguments.length;
        "[object Boolean]" === Object.prototype.toString.call(arguments[0]) && (t = arguments[0], 
        n++);
        for (var o = function(n) {
            for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (t && "[object Object]" === Object.prototype.toString.call(n[r]) ? e[r] = l(!0, e[r], n[r]) : e[r] = n[r]);
        }; r > n; n++) {
            var a = arguments[n];
            o(a);
        }
        return e;
    }, s = function(e) {
        return Math.max(e.scrollHeight, e.offsetHeight, e.clientHeight);
    }, f = function(e, t) {
        var n, r, o = t.charAt(0), a = "classList" in document.documentElement;
        for ("[" === o && (t = t.substr(1, t.length - 2), n = t.split("="), n.length > 1 && (r = !0, 
        n[1] = n[1].replace(/"/g, "").replace(/'/g, ""))); e && e !== document; e = e.parentNode) {
            if ("." === o) if (a) {
                if (e.classList.contains(t.substr(1))) return e;
            } else if (new RegExp("(^|\\s)" + t.substr(1) + "(\\s|$)").test(e.className)) return e;
            if ("#" === o && e.id === t.substr(1)) return e;
            if ("[" === o && e.hasAttribute(n[0])) {
                if (!r) return e;
                if (e.getAttribute(n[0]) === n[1]) return e;
            }
            if (e.tagName.toLowerCase() === t) return e;
        }
        return null;
    };
    c.escapeCharacters = function(e) {
        "#" === e.charAt(0) && (e = e.substr(1));
        for (var t, n = String(e), r = n.length, o = -1, a = "", c = n.charCodeAt(0); ++o < r; ) {
            if (t = n.charCodeAt(o), 0 === t) throw new InvalidCharacterError("Invalid character: the input contains U+0000.");
            a += t >= 1 && 31 >= t || 127 == t || 0 === o && t >= 48 && 57 >= t || 1 === o && t >= 48 && 57 >= t && 45 === c ? "\\" + t.toString(16) + " " : t >= 128 || 45 === t || 95 === t || t >= 48 && 57 >= t || t >= 65 && 90 >= t || t >= 97 && 122 >= t ? n.charAt(o) : "\\" + n.charAt(o);
        }
        return "#" + a;
    };
    var d = function(e, t) {
        var n;
        return "easeInQuad" === e && (n = t * t), "easeOutQuad" === e && (n = t * (2 - t)), 
        "easeInOutQuad" === e && (n = .5 > t ? 2 * t * t : -1 + (4 - 2 * t) * t), "easeInCubic" === e && (n = t * t * t), 
        "easeOutCubic" === e && (n = --t * t * t + 1), "easeInOutCubic" === e && (n = .5 > t ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1), 
        "easeInQuart" === e && (n = t * t * t * t), "easeOutQuart" === e && (n = 1 - --t * t * t * t), 
        "easeInOutQuart" === e && (n = .5 > t ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t), 
        "easeInQuint" === e && (n = t * t * t * t * t), "easeOutQuint" === e && (n = 1 + --t * t * t * t * t), 
        "easeInOutQuint" === e && (n = .5 > t ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t), 
        n || t;
    }, h = function(e, t, n) {
        var r = 0;
        if (e.offsetParent) do r += e.offsetTop, e = e.offsetParent; while (e);
        return r = r - t - n, r >= 0 ? r : 0;
    }, m = function() {
        return Math.max(e.document.body.scrollHeight, e.document.documentElement.scrollHeight, e.document.body.offsetHeight, e.document.documentElement.offsetHeight, e.document.body.clientHeight, e.document.documentElement.clientHeight);
    }, p = function(e) {
        return e && "object" == typeof JSON && "function" == typeof JSON.parse ? JSON.parse(e) : {};
    }, g = function(t, n) {
        e.history.pushState && (n || "true" === n) && "file:" !== e.location.protocol && e.history.pushState(null, null, [ e.location.protocol, "//", e.location.host, e.location.pathname, e.location.search, t ].join(""));
    }, b = function(e) {
        return null === e ? 0 : s(e) + e.offsetTop;
    };
    c.animateScroll = function(n, c, u) {
        var s = p(c ? c.getAttribute("data-options") : null), f = l(t || i, u || {}, s), v = "[object Number]" === Object.prototype.toString.call(n) ? !0 : !1, y = v ? null : "#" === n ? e.document.documentElement : e.document.querySelector(n);
        if (v || y) {
            var O = e.pageYOffset;
            r || (r = e.document.querySelector(f.selectorHeader)), o || (o = b(r));
            var S, I, H = v ? n : h(y, o, parseInt(f.offset, 10)), E = H - O, j = m(), C = 0;
            v || g(n, f.updateURL);
            var L = function(t, r, o) {
                var a = e.pageYOffset;
                (t == r || a == r || e.innerHeight + a >= j) && (clearInterval(o), v || y.focus(), 
                f.callback(n, c));
            }, w = function() {
                C += 16, S = C / parseInt(f.speed, 10), S = S > 1 ? 1 : S, I = O + E * d(f.easing, S), 
                e.scrollTo(0, Math.floor(I)), L(I, H, a);
            }, A = function() {
                clearInterval(a), a = setInterval(w, 16);
            };
            0 === e.pageYOffset && e.scrollTo(0, 0), A();
        }
    };
    var v = function(e) {
        if (0 === e.button && !e.metaKey && !e.ctrlKey) {
            var n = f(e.target, t.selector);
            if (n && "a" === n.tagName.toLowerCase()) {
                e.preventDefault();
                var r = c.escapeCharacters(n.hash);
                c.animateScroll(r, n, t);
            }
        }
    }, y = function(e) {
        n || (n = setTimeout(function() {
            n = null, o = b(r);
        }, 66));
    };
    return c.destroy = function() {
        t && (e.document.removeEventListener("click", v, !1), e.removeEventListener("resize", y, !1), 
        t = null, n = null, r = null, o = null, a = null);
    }, c.init = function(n) {
        u && (c.destroy(), t = l(i, n || {}), r = e.document.querySelector(t.selectorHeader), 
        o = b(r), e.document.addEventListener("click", v, !1), r && e.addEventListener("resize", y, !1));
    }, c;
});

(function() {
    var lastTime = 0;
    var vendors = [ "webkit", "moz" ];
    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
        window.requestAnimationFrame = window[vendors[x] + "RequestAnimationFrame"];
        window.cancelAnimationFrame = window[vendors[x] + "CancelAnimationFrame"] || window[vendors[x] + "CancelRequestAnimationFrame"];
    }
    if (!window.requestAnimationFrame) window.requestAnimationFrame = function(callback, element) {
        var currTime = new Date().getTime();
        var timeToCall = Math.max(0, 16 - (currTime - lastTime));
        var id = window.setTimeout(function() {
            callback(currTime + timeToCall);
        }, timeToCall);
        lastTime = currTime + timeToCall;
        return id;
    };
    if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function(id) {
        clearTimeout(id);
    };
})();

(function(window, document) {
    var RITHM = 1e3 * 4;
    var FADE_TIMEOUT = 500;
    var FadeElement = function($img) {
        this.src = $img.src;
        this.baseClassName = $img.className;
        this.element = $img;
        return this;
    };
    FadeElement.prototype.fadeIn = function() {
        var $this = this;
        window.setTimeout(function() {
            if ($this.element) {
                $this.element.className = $this.baseClassName + " fade-in";
            }
        }, FADE_TIMEOUT);
        return $this;
    };
    FadeElement.prototype.fadeOut = function() {
        var $this = this;
        window.setTimeout(function() {
            if ($this.element) {
                $this.element.className = $this.baseClassName + " fade-out";
            }
        }, FADE_TIMEOUT);
        return $this;
    };
    FadeElement.prototype.reset = function() {
        var $this = this;
        if ($this.element) {
            $this.element.className = $this.baseClassName;
        }
        return $this;
    };
    FadeElement.prototype.prepare = function() {
        var $this = this;
        if ($this.element) {
            $this.element.className = $this.baseClassName + " prepare";
        }
        return $this;
    };
    function Orchestrator(window, document) {
        var orchestra = [];
        var $faders = document.querySelectorAll(".fader");
        for (var i = 0, $fader, len = $faders.length; i < len; i += 1) {
            $fader = $faders[i];
            var $figure = $fader.querySelectorAll("figure");
            var $imgs = $fader.getElementsByTagName("img");
            for (var i = 0, len = $imgs.length; i < len; i += 1) {
                orchestra[i] = new FadeElement($imgs[i]);
            }
        }
        var iterator, iteration = 0, prev_iteration, next_iteration;
        var $element, $prev_element, $next_element, $last_element;
        function iterate() {
            clearTimeout(iterator);
            if (iteration === orchestra.length) {
                iteration = 0;
                return iterator = setTimeout(iterate, RITHM || 4e3);
            }
            next_iteration = iteration + 1 === orchestra.length ? 0 : iteration + 1;
            prev_iteration = iteration === 0 ? orchestra.length - 1 : iteration - 1;
            last_iteration = orchestra.length - 2 === 0 ? orchestra.length - 2 : iteration - 2;
            $element = orchestra[iteration];
            $prev_element = orchestra[prev_iteration];
            $next_element = orchestra[next_iteration];
            $last_element = orchestra[last_iteration];
            if ($last_element) {
                $last_element.reset();
            }
            $prev_element.fadeOut();
            $element.fadeIn();
            $next_element.prepare();
            iteration += 1;
            iterator = setTimeout(function() {
                requestAnimationFrame(iterate);
            }, RITHM || 4e3);
        }
        requestAnimationFrame(iterate);
    }
    Orchestrator(window, document);
})(window, document);

(function(window, document) {
    var nav, toggler;
    function toggle(event) {
        var anchor = event.target;
        while (!anchor.className) {
            if (anchor === this) {
                break;
            }
            anchor = anchor.parentNode;
        }
        if (/open/.test(anchor.className)) {
            nav.className = "global";
            anchor.className = "toggler";
        } else {
            nav.className = "global open";
            anchor.className = "toggler open";
        }
    }
    function Orchestrator(window, document) {
        nav = document.getElementById("top");
        toggler = document.querySelector(".toggler");
        toggler.addEventListener("click", toggle);
    }
    Orchestrator(window, document);
})(window, document);

(function(window, document) {
    "use strict";
    var viewport = window.viewport;
    var ImageElement = function($img) {
        var $this = this;
        $this.src = $img.src;
        $this.element = $img;
        $this.element.setAttribute("data-state", "created");
        $this.meta = {
            isVisible: false,
            isMobile: true,
            isVertical: true,
            verticalPosFix: "_v",
            verticalEdge: 414
        };
        $this.baseClassName = $img.className;
        $this.highResSrc = $img.getAttribute("data-highres");
        if (!$this.highResSrc) {
            return $this;
        }
        $this.resolve();
        if (viewport !== "undefined") {
            viewport.on("scroll", function() {
                $this.resolve.call($this, this);
            });
            viewport.on("resize", function() {
                $this.resolve.call($this, this);
            });
        }
        return $this;
    };
    ImageElement.prototype.isVisible = function() {
        var $this = this;
        $this.meta.isVisible = typeof viewport.isVisible === "function" && viewport.isVisible($this.element);
        return $this.meta.isVisible;
    };
    ImageElement.prototype.isMobile = function() {
        var $this = this;
        $this.meta.isMobile = /Mobi/.test(navigator.userAgent);
        return $this.meta.isMobile;
    };
    ImageElement.prototype.isVertical = function() {
        var $this = this;
        $this.meta.isVertical = false;
        if (typeof viewport !== "undefined") {
            viewport.calculateDeviceDimensions();
            $this.meta.isVertical = viewport.height > viewport.width;
        }
        return $this.meta.isVertical;
    };
    ImageElement.prototype.resolve = function() {
        var $this = this;
        if (typeof viewport !== "undefined" && viewport.isVisible($this.element)) {
            $this.useHighRes();
        }
        return $this;
    };
    ImageElement.prototype.updateSrc = function() {
        var $this = this;
        if ($this.src === $this.element.src) {
            return $this;
        }
        $this.element.setAttribute("data-state", "loading");
        if ($this.isMobile() || $this.isVertical()) {
            $this.src = $this.src.replace(".", $this.meta.verticalPosFix + ".");
        }
        var preload = new Image();
        preload.src = $this.src;
        preload.onload = function() {
            preload = null;
            $this.element.src = $this.src;
            $this.element.setAttribute("data-state", "ready");
        };
        return $this;
    };
    ImageElement.prototype.useHighRes = function() {
        var $this = this;
        if ($this.highResSrc) {
            $this.src = $this.highResSrc;
            $this.updateSrc();
        }
        return $this;
    };
    function Orchestrator(window, document) {
        var i, $img, $imgs = document.getElementsByTagName("img");
        for (i = 0; i < $imgs.length; i += 1) {
            $img = $imgs[i];
            if (!$img.getAttribute("data-highres")) {
                continue;
            }
            new ImageElement($img);
        }
    }
    Orchestrator(window, document);
})(window, document);

(function(window, document) {
    smoothScroll.init({
        offset: 100
    });
})(window, document);
//# sourceMappingURL=marcelaviola.com.ar.min.js.map